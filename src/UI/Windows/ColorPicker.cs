//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TerminalGuiDesigner {
    using Terminal.Gui;
    
    
    public partial class 
    ColorPicker {
        

        public Attribute? Result { get; internal set; }
        public bool Cancelled { get; internal set; }

        public ColorPicker(Attribute? currentValue) {
            InitializeComponent();

            if(currentValue != null)
            {
                 radiogroup1.SelectedItem =  (int)currentValue.Value.Foreground;
                 radiogroup2.SelectedItem =  (int)currentValue.Value.Background;
            }

            lblPreview.ColorScheme = new ColorScheme();                 
            UpdatePreview();

            radiogroup1.SelectedItemChanged += (s)=>UpdatePreview();
            radiogroup2.SelectedItemChanged += (s)=>UpdatePreview();

            btnOk.Clicked += ()=>Ok();
            btnCancel.Clicked += ()=>Cancel();
        }

        private void Ok()
        {
            Cancelled = false;
            Result = GetColor();
            Application.RequestStop();
        }
        private void Cancel()
        {
            Cancelled = true;
            Result = null;
            Application.RequestStop();
        }

        private void UpdatePreview()
        {
            lblPreview.ColorScheme.Normal = GetColor();            
            lblPreview.SetNeedsDisplay();
        }

        private Attribute GetColor()
        {
            return Attribute.Make((Color)radiogroup1.SelectedItem,(Color)radiogroup2.SelectedItem);
        }

        
    }
}
