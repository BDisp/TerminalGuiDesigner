
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.1.0.0
//      You can make changes to this file and they will not be overwritten when saving.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace TerminalGuiDesigner.UI.Windows {
    using System.Collections;
    using Terminal.Gui;
    using TerminalGuiDesigner.ToCode;

    public partial class ArrayEditor {

        /// <summary>
        /// True if the editing was aborted.
        /// </summary>
        public bool Cancelled { get; private set; } = true;

        private readonly Design design;
        private Type elementType;

        /// <summary>
        /// The new array 
        /// </summary>
        public IList Result { get; private set; }

        public ArrayEditor(Design design, Type elementType, IList oldValue) {
            InitializeComponent();
            this.design = design;
            this.elementType = elementType;

            Type listType = typeof(List<>).MakeGenericType(elementType);
            Result = (IList)Activator.CreateInstance(listType);
         
            foreach(var e in oldValue)
            {
                Result.Add(e);
            }

            lvElements.SetSource(Result);
            btnOk.Clicked += BtnOk_Clicked;
            btnCancel.Clicked += BtnCancel_Clicked;
            btnAddElement.Clicked += BtnAddElement_Clicked;
        }

        private void BtnAddElement_Clicked(object sender, EventArgs e)
        {
            if(ValueFactory.GetNewValue("Element Value", design, this.elementType,null, out var newValue,true))
            {
                Result.Add(newValue);                
            }

            lvElements.SetSource(Result);
            lvElements.SetNeedsDisplay();
        }

        private void BtnCancel_Clicked(object sender, EventArgs e)
        {
            Cancelled = true;
            Application.RequestStop();
        }

        private void BtnOk_Clicked(object sender, EventArgs e)
        {
            Cancelled = false;
            Application.RequestStop();
        }
    }
}
